---

- name: locale | generate
  become: yes
  locale_gen:
    name: "{{ item }}"
  loop: "{{ locales }}"

- name: locale | configure
  become: yes
  template:
    src: templates/locale.conf.j2
    dest: /etc/locale.gen
    owner: root
    group: root
    mode: u-rw,g=r,o=r

- name: configure | /etc/motd
  become: true
  template:
    src: templates/motd.j2
    dest: /etc/motd
    owner: root
    group: root
    mode: u-rw,g=r,o=r

- name: configure /etc/issue
  become: true
  template:
    src: templates/issue.j2
    dest: /etc/issue
    owner: root
    group: root
    mode: u-rw,g=r,o=r

- name: start/enable cron
  become: yes
  systemd_service:
    state: started
    daemon_reload: true
    name: "{{ cron_package }}"
    enabled: true
  when:
    - lookup('env', 'CI') != 'true'
    - ansible_service_mgr == "systemd"

- name: configure | sysctl
  become: true
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    sysctl_set: true
    state: present
    reload: true
    sysctl_file: /etc/sysctl.d/999-ansible.conf
  with_dict: "{{ sysctl_params }}"
  when:
    - configure_sysctl|bool
    - ansible_facts['virtualization_type'] != 'docker'

- name: configure | systemd-journald
  become: true
  template:
    src: templates/journald.conf.j2
    dest: /etc/systemd/journald.conf
    owner: root
    group: root
    mode: u-rw,g=r,o=r
  notify: restart journald
  when:
    - ansible_service_mgr == "systemd"

- name: configure sshd
  become: true
  lineinfile:
    path: /etc/ssh/sshd_config
    regexp: ^{{ item.key }}
    line: "{{ item.key }} {{ item.value }}"
    state: present
    owner: root
    group: root
    mode: "0600"
    backup: true
    validate: /usr/sbin/sshd -T -f %s
  with_dict: "{{ sshd_config }}"
  when:
    - ansible_facts['virtualization_type'] != 'docker'
  notify: restart_sshd
  tags: sshd
...
